//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/INPUT/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""PLAYER"",
            ""id"": ""25d8754f-9227-4513-8b25-dc5680286c2c"",
            ""actions"": [
                {
                    ""name"": ""MOVE"",
                    ""type"": ""Value"",
                    ""id"": ""bdcce5c8-1c97-40f4-b0b0-21a8b5624d3a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JUMP"",
                    ""type"": ""Button"",
                    ""id"": ""833e3a20-d785-44d0-837a-bd04d6c3f4a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FALL"",
                    ""type"": ""Button"",
                    ""id"": ""333f36f9-6cbb-4a89-ae56-081207aebd83"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DASH"",
                    ""type"": ""Button"",
                    ""id"": ""9fbc8ffe-bcf8-4a15-9062-2541419d7fad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DEBUG"",
                    ""type"": ""Button"",
                    ""id"": ""2bfed189-0cde-4cac-94ea-0c1bdd451510"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""AD"",
                    ""id"": ""bb7c38eb-b52e-4a2a-9834-a4abf6ddf027"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""14372638-3493-41e8-b96f-969cf516e196"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e5037436-1ef6-420e-ac3e-9731db229b9d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GamepadStick"",
                    ""id"": ""8ff558e5-f06d-44de-a30a-746a9c345e5b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2b09ec22-adfb-439f-8d88-e67b4c2de09e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a0de88c3-5573-494f-a5e8-e132c1ac6237"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""937825bb-6b93-4d2e-9cf3-c099c71c10f4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""11c82e96-3451-485a-b22d-1212d801f0e4"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a066f8b2-3a20-444c-a23c-ae8dab0cd96c"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""da111647-76ed-4407-8398-e47465916b35"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JUMP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2292a197-9409-4ae1-96b9-ad9ac63fa013"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JUMP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4e9818c-7016-4057-bfc5-6b7f1dac5136"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FALL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""533d3bef-40ab-446a-8093-64aadb9a554e"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FALL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f16f10ff-b58b-406d-b5b8-58d4f49813ca"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DASH"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d2c89fa-2fac-41bf-920a-a4bfab34bc08"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DASH"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f88ed308-838a-4ac1-852e-e7c7a90ef563"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DEBUG"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PLAYER
        m_PLAYER = asset.FindActionMap("PLAYER", throwIfNotFound: true);
        m_PLAYER_MOVE = m_PLAYER.FindAction("MOVE", throwIfNotFound: true);
        m_PLAYER_JUMP = m_PLAYER.FindAction("JUMP", throwIfNotFound: true);
        m_PLAYER_FALL = m_PLAYER.FindAction("FALL", throwIfNotFound: true);
        m_PLAYER_DASH = m_PLAYER.FindAction("DASH", throwIfNotFound: true);
        m_PLAYER_DEBUG = m_PLAYER.FindAction("DEBUG", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PLAYER
    private readonly InputActionMap m_PLAYER;
    private IPLAYERActions m_PLAYERActionsCallbackInterface;
    private readonly InputAction m_PLAYER_MOVE;
    private readonly InputAction m_PLAYER_JUMP;
    private readonly InputAction m_PLAYER_FALL;
    private readonly InputAction m_PLAYER_DASH;
    private readonly InputAction m_PLAYER_DEBUG;
    public struct PLAYERActions
    {
        private @PlayerInputAction m_Wrapper;
        public PLAYERActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @MOVE => m_Wrapper.m_PLAYER_MOVE;
        public InputAction @JUMP => m_Wrapper.m_PLAYER_JUMP;
        public InputAction @FALL => m_Wrapper.m_PLAYER_FALL;
        public InputAction @DASH => m_Wrapper.m_PLAYER_DASH;
        public InputAction @DEBUG => m_Wrapper.m_PLAYER_DEBUG;
        public InputActionMap Get() { return m_Wrapper.m_PLAYER; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PLAYERActions set) { return set.Get(); }
        public void SetCallbacks(IPLAYERActions instance)
        {
            if (m_Wrapper.m_PLAYERActionsCallbackInterface != null)
            {
                @MOVE.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnMOVE;
                @MOVE.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnMOVE;
                @MOVE.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnMOVE;
                @JUMP.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnJUMP;
                @JUMP.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnJUMP;
                @JUMP.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnJUMP;
                @FALL.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnFALL;
                @FALL.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnFALL;
                @FALL.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnFALL;
                @DASH.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnDASH;
                @DASH.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnDASH;
                @DASH.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnDASH;
                @DEBUG.started -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnDEBUG;
                @DEBUG.performed -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnDEBUG;
                @DEBUG.canceled -= m_Wrapper.m_PLAYERActionsCallbackInterface.OnDEBUG;
            }
            m_Wrapper.m_PLAYERActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MOVE.started += instance.OnMOVE;
                @MOVE.performed += instance.OnMOVE;
                @MOVE.canceled += instance.OnMOVE;
                @JUMP.started += instance.OnJUMP;
                @JUMP.performed += instance.OnJUMP;
                @JUMP.canceled += instance.OnJUMP;
                @FALL.started += instance.OnFALL;
                @FALL.performed += instance.OnFALL;
                @FALL.canceled += instance.OnFALL;
                @DASH.started += instance.OnDASH;
                @DASH.performed += instance.OnDASH;
                @DASH.canceled += instance.OnDASH;
                @DEBUG.started += instance.OnDEBUG;
                @DEBUG.performed += instance.OnDEBUG;
                @DEBUG.canceled += instance.OnDEBUG;
            }
        }
    }
    public PLAYERActions @PLAYER => new PLAYERActions(this);
    public interface IPLAYERActions
    {
        void OnMOVE(InputAction.CallbackContext context);
        void OnJUMP(InputAction.CallbackContext context);
        void OnFALL(InputAction.CallbackContext context);
        void OnDASH(InputAction.CallbackContext context);
        void OnDEBUG(InputAction.CallbackContext context);
    }
}
